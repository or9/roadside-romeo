{
	"id": "fd7e340a-c478-c7fa-5281-41a32ac4a291",
	"name": "Crafts API",
	"description": "Collection of Requests for demonstration. Including tests and all the things for Postman, Jetpacks and Newman.",
	"order": [
		"e890175b-5753-21f6-308f-18a7b5d1e210",
		"801c62c4-ebfc-6a05-d0b1-47a0bdd0afc8",
		"2e8723f3-110c-d392-ad12-cccf33b09ecb",
		"5274a6cc-de49-a72a-3ae4-bb00eb6b14ae",
		"ea4d306a-ff7e-ce3d-5759-013aa555388c",
		"eb5e62ba-401a-9b61-d8a0-9ff2f518b2b0"
	],
	"folders": [],
	"timestamp": 1410201278582,
	"synced": false,
	"requests": [
		{
			"id": "2e8723f3-110c-d392-ad12-cccf33b09ecb",
			"headers": "Accept: application/json\n",
			"url": "http://localhost:3000/user?name0=joe&name1=bazooka",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if(!responseBody) tests[\"No response body, status code should be 404\"] = responseCode.code === 404;\nelse tests[\"Response body is present, status code should be 200\"] = responseCode.code === 200;",
			"time": 1410788332809,
			"name": "User",
			"description": "Get specific user",
			"collectionId": "fd7e340a-c478-c7fa-5281-41a32ac4a291",
			"responses": [],
			"synced": false
		},
		{
			"id": "5274a6cc-de49-a72a-3ae4-bb00eb6b14ae",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:3000/register",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"headers contain app/json\"] = responseHeaders[\"Content-Type\"] === \"application/json\";\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body is present\"] = !!data;\n\ntests[\"Response's data has all the things in schema\"] = !!data.__v && !!data.email && !!data.company && !!data.age && !!data.password && !!data.created_at && !!data.updated_at && !!data._id && !!data.name;\n\ntests[\"Data has property name\"] = data.name.length !== 0;\n\npostman.setEnvironmentVariable(\"auth\", data.password);",
			"time": 1410793529074,
			"name": "User Registration",
			"description": "Creates a user with given parameters and returns a temporary password required for login  \n####Body\n`email` will be used as username _Required_  \n_The following properties are optional_  \n`name` Array  \n`company` String  \n`age` Number",
			"collectionId": "fd7e340a-c478-c7fa-5281-41a32ac4a291",
			"responses": [],
			"synced": false,
			"rawModeData": "{\n  \"email\": \"bazookajoe@asdf.com\",\n  \"name\": [\"Joe\", \"Bazooka\"]\n}"
		},
		{
			"id": "801c62c4-ebfc-6a05-d0b1-47a0bdd0afc8",
			"headers": "Accept: application/json\n",
			"url": "http://localhost:3000/users",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var headers = responseHeaders;\n\ntests[\"Content-Type is present\"] = headers.hasOwnProperty(\"Content-Type\");\n\ntests[\"Content-Type header has property application/xml or application/json\"] = headers[\"Content-Type\"] === \"application/json\" || \"application/xml\";",
			"time": 1410788342168,
			"name": "Users",
			"description": "Headers:\n`Accept`: [`application/json`|`application/xml`] _default_ JSON response",
			"collectionId": "fd7e340a-c478-c7fa-5281-41a32ac4a291",
			"responses": [],
			"synced": false
		},
		{
			"id": "e890175b-5753-21f6-308f-18a7b5d1e210",
			"headers": "",
			"url": "http://localhost:3000/?cat=sandwich&title=BLAHBLAHBLAH",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");\n\ntests[\"Content-Type header is text/html\"] = responseHeaders[\"Content-Type\"] === \"text/html\";\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1410788318288,
			"name": "Home",
			"description": "Add query to adjust returned page, e.x., `{{host}}:{{port}}/?title=blahBlahBlah`",
			"collectionId": "fd7e340a-c478-c7fa-5281-41a32ac4a291",
			"responses": [],
			"synced": false
		},
		{
			"id": "ea4d306a-ff7e-ce3d-5759-013aa555388c",
			"headers": "Accept: application/json\nAuthorization: Basic YmF6b29rYWpvZUBhc2RmLmNvbTo1ZWhsMzdzeXY=\n",
			"url": "http://localhost:3000/user/bazookajoe@asdf.com",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Response headers Content-Type should be app/json\"] = responseHeaders[\"Content-Type\"] === \"application/json\";\n\ntests[\"data has all the properties\"] = !!data.name;\n\ntests[\"email is the same as env email\"] = data.email === environment.email;\n\ntests[\"data.password is not the same as env password\"] = data.password !== environment.auth;\n\ntests[\"response's data.name is changed to 'Great, Success!'\"] = data.name[0] === \"Great\" && data.name[1] === \"Success!\";",
			"time": 1410793432879,
			"name": "Get Registered User's Info",
			"description": "####Headers\n`Authentication`: `Basic {{username-password}}` _Required_  \n####Body\n_None_",
			"collectionId": "fd7e340a-c478-c7fa-5281-41a32ac4a291",
			"responses": [],
			"synced": false,
			"rawModeData": ""
		},
		{
			"id": "eb5e62ba-401a-9b61-d8a0-9ff2f518b2b0",
			"headers": "",
			"url": "http://localhost:3000/users/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"responseCode status should be 200\"] = responseCode.code === 200;\n\ntests[\"data returns empty array\"] = data.length === 0;",
			"time": 1410793594226,
			"name": "Reset User DB Model",
			"description": "",
			"collectionId": "fd7e340a-c478-c7fa-5281-41a32ac4a291",
			"responses": [],
			"synced": false,
			"rawModeData": ""
		}
	]
}